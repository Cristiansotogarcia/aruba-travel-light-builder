import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Calendar, User, Phone, MapPin, Package, AlertTriangle } from 'lucide-react';
import { format } from 'date-fns';
import { getStatusColor } from './calendar/statusUtils';
export const BookingDetailsCard = ({ booking }) => {
    return (_jsx(Card, { children: _jsxs(CardContent, { className: "p-6 space-y-6", children: [_jsxs("div", { className: "flex justify-between items-start", children: [_jsxs("div", { children: [_jsx(Badge, { className: getStatusColor(booking.status), children: booking.status.charAt(0).toUpperCase() + booking.status.slice(1).replace('_', ' ') }), _jsxs("div", { className: "flex items-center gap-2 mt-3 text-gray-600", children: [_jsx(Calendar, { className: "h-4 w-4" }), _jsxs("span", { children: [format(new Date(booking.start_date), 'dd/MM/yyyy'), " - ", format(new Date(booking.end_date), 'dd/MM/yyyy')] })] })] }), _jsxs("div", { className: "text-right", children: [_jsxs("div", { className: "text-2xl font-bold", children: ["$", booking.total_amount] }), _jsx("div", { className: "text-sm text-gray-500", children: "Total Amount" })] })] }), booking.status === 'undeliverable' && booking.delivery_failure_reason && (_jsxs(Alert, { className: "border-orange-200 bg-orange-50", children: [_jsx(AlertTriangle, { className: "h-4 w-4 text-orange-600" }), _jsxs(AlertDescription, { className: "text-orange-800", children: [_jsx("strong", { children: "Delivery Failed:" }), " ", booking.delivery_failure_reason] })] })), _jsxs("div", { children: [_jsxs("h3", { className: "font-semibold mb-3 flex items-center gap-2", children: [_jsx(User, { className: "h-4 w-4" }), "Customer Information"] }), _jsxs("div", { className: "grid grid-cols-2 gap-4 text-sm", children: [_jsxs("div", { children: [_jsx("span", { className: "text-gray-500", children: "Name:" }), _jsx("div", { className: "font-medium", children: booking.customer_name })] }), _jsxs("div", { children: [_jsx("span", { className: "text-gray-500", children: "Email:" }), _jsx("div", { className: "font-medium", children: booking.customer_email })] }), _jsxs("div", { children: [_jsxs("span", { className: "text-gray-500 flex items-center gap-1", children: [_jsx(Phone, { className: "h-3 w-3" }), "Phone:"] }), _jsx("div", { className: "font-medium", children: booking.customer_phone })] }), _jsxs("div", { children: [_jsxs("span", { className: "text-gray-500 flex items-center gap-1", children: [_jsx(MapPin, { className: "h-3 w-3" }), "Address:"] }), _jsx("div", { className: "font-medium", children: booking.customer_address })] })] })] }), booking.booking_items && booking.booking_items.length > 0 && (_jsxs("div", { children: [_jsxs("h3", { className: "font-semibold mb-3 flex items-center gap-2", children: [_jsx(Package, { className: "h-4 w-4" }), "Equipment Items"] }), _jsx("div", { className: "space-y-2", children: booking.booking_items.map((item, index) => (_jsxs("div", { className: "flex justify-between items-center p-3 bg-gray-50 rounded-lg", children: [_jsxs("div", { children: [_jsx("div", { className: "font-medium", children: item.equipment_name }), _jsxs("div", { className: "text-sm text-gray-500", children: ["$", item.equipment_price, "/day \u00D7 ", item.quantity, " items"] })] }), _jsxs("div", { className: "font-bold", children: ["$", item.subtotal] })] }, index))) })] }))] }) }));
};
