import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from '@/components/ui/button';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Badge } from '@/components/ui/badge';
import { Plus, Minus, X } from 'lucide-react';
import { mockEquipment } from '@/data/mockEquipment';
export const EquipmentSelectionSection = ({ selectedEquipment, bookingItems, onSelectedEquipmentChange, onAddEquipment, onUpdateQuantity, onRemoveItem }) => {
    return (_jsxs("div", { className: "space-y-3", children: [_jsx("h3", { className: "font-medium", children: "Equipment" }), _jsxs("div", { className: "flex gap-2", children: [_jsxs(Select, { value: selectedEquipment, onValueChange: onSelectedEquipmentChange, children: [_jsx(SelectTrigger, { className: "flex-1 h-8", children: _jsx(SelectValue, { placeholder: "Select equipment" }) }), _jsx(SelectContent, { children: mockEquipment.map((equipment) => (_jsxs(SelectItem, { value: equipment.id, children: [equipment.name, " - $", equipment.price, "/day"] }, equipment.id))) })] }), _jsx(Button, { onClick: onAddEquipment, disabled: !selectedEquipment, size: "sm", children: _jsx(Plus, { className: "h-4 w-4" }) })] }), bookingItems.length > 0 && (_jsx("div", { className: "space-y-2", children: bookingItems.map((item) => (_jsxs("div", { className: "flex items-center justify-between p-2 border rounded text-sm", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx("span", { className: "font-medium", children: item.equipment_name }), _jsxs(Badge, { variant: "outline", className: "text-xs", children: ["$", item.equipment_price, "/day"] })] }), _jsxs("div", { className: "flex items-center gap-1", children: [_jsx(Button, { size: "sm", variant: "outline", onClick: () => onUpdateQuantity(item.equipment_id, -1), className: "h-6 w-6 p-0", children: _jsx(Minus, { className: "h-3 w-3" }) }), _jsx("span", { className: "w-8 text-center", children: item.quantity }), _jsx(Button, { size: "sm", variant: "outline", onClick: () => onUpdateQuantity(item.equipment_id, 1), className: "h-6 w-6 p-0", children: _jsx(Plus, { className: "h-3 w-3" }) }), _jsx(Button, { size: "sm", variant: "destructive", onClick: () => onRemoveItem(item.equipment_id), className: "h-6 w-6 p-0 ml-1", children: _jsx(X, { className: "h-3 w-3" }) })] })] }, item.equipment_id))) }))] }));
};
